package com.hzcloud.device.hikvision;

import java.util.HashMap;
import java.util.Map;

public final class HikAlarmInfo {
    private static final Map<Integer, Map<Integer, String>> HIK_ALARM_INFO; 
    private static final Map<Integer, String> ALARM_INFO; 
    private static final Map<Integer, String> EXCEPTION_INFO;
    private static final Map<Integer, String> OPERATION_INFO;
    private static final Map<Integer, String> EVENT_INFO;
    static
    {
        ALARM_INFO = new HashMap<Integer, String>();
        ALARM_INFO.put(0x400,"防区短路报警");
        ALARM_INFO.put(0x401,"防区断路报警");
        ALARM_INFO.put(0x402,"防区异常报警");
        ALARM_INFO.put(0x403,"防区报警恢复");
        ALARM_INFO.put(0x404,"设备防拆报警");
        ALARM_INFO.put(0x405,"设备防拆恢复");
        ALARM_INFO.put(0x406,"读卡器防拆报警");
        ALARM_INFO.put(0x407,"读卡器防拆恢复");
        ALARM_INFO.put(0x408,"事件输入报警");
        ALARM_INFO.put(0x409,"事件输入恢复");
        ALARM_INFO.put(0x40a,"胁迫报警");
        ALARM_INFO.put(0x40b,"离线事件满90%报警");
        ALARM_INFO.put(0x40c,"卡号认证失败超次报警");
        ALARM_INFO.put(0x40d,"SD卡存储满报警");
        ALARM_INFO.put(0x40e,"联动抓拍事件报警");
        ALARM_INFO.put(0x40f,"门控安全模块防拆报警");
        ALARM_INFO.put(0x410,"门控安全模块防拆恢复");
        ALARM_INFO.put(0x411,"POS开启");
        ALARM_INFO.put(0x412,"POS结束");
        ALARM_INFO.put(0x413,"人脸图像画质低");
        ALARM_INFO.put(0x414,"指纹图像画质低");
        ALARM_INFO.put(0x415,"消防输入短路报警");
        ALARM_INFO.put(0x416,"消防输入断路报警");
        ALARM_INFO.put(0x417,"消防输入恢复");
        ALARM_INFO.put(0x418,"消防按钮触发");
        ALARM_INFO.put(0x419,"消防按钮恢复");
        ALARM_INFO.put(0x41a,"维护按钮触发");
        ALARM_INFO.put(0x41b,"维护按钮恢复");
        ALARM_INFO.put(0x41c,"紧急按钮触发");
        ALARM_INFO.put(0x41d,"紧急按钮恢复");
        ALARM_INFO.put(0x41e,"分控器防拆报警");
        ALARM_INFO.put(0x41f,"分控器防拆报警恢复");
        ALARM_INFO.put(0x422,"通道控制器防拆报警");
        ALARM_INFO.put(0x423,"通道控制器防拆报警恢复");
        ALARM_INFO.put(0x424,"通道控制器消防输入报警");
        ALARM_INFO.put(0x425,"通道控制器消防输入报警恢复");
        ALARM_INFO.put(0x442,"合法事件满90%报警");
        ALARM_INFO.put(0x95d,"智能锁防劫持报警");

        EXCEPTION_INFO = new HashMap<Integer, String>();
        EXCEPTION_INFO.put(0x27,"网络断开");
        EXCEPTION_INFO.put(0x3a,"RS485连接状态异常");
        EXCEPTION_INFO.put(0x3b,"RS485连接状态异常恢复");
        EXCEPTION_INFO.put(0x400,"设备上电启动");
        EXCEPTION_INFO.put(0x401,"设备掉电关闭");
        EXCEPTION_INFO.put(0x402,"看门狗复位");
        EXCEPTION_INFO.put(0x403,"蓄电池电压低");
        EXCEPTION_INFO.put(0x404,"蓄电池电压恢复正常");
        EXCEPTION_INFO.put(0x405,"交流电断电");
        EXCEPTION_INFO.put(0x406,"交流电恢复");
        EXCEPTION_INFO.put(0x407,"网络恢复");
        EXCEPTION_INFO.put(0x408,"FLASH读写异常");
        EXCEPTION_INFO.put(0x409,"读卡器掉线");
        EXCEPTION_INFO.put(0x40a,"读卡器掉线恢复");
        EXCEPTION_INFO.put(0x40b,"指示灯关闭");
        EXCEPTION_INFO.put(0x40c,"指示灯恢复");
        EXCEPTION_INFO.put(0x40d,"通道控制器掉线");
        EXCEPTION_INFO.put(0x40e,"通道控制器恢复");
        EXCEPTION_INFO.put(0x40f,"门控安全模块掉线");
        EXCEPTION_INFO.put(0x410,"门控安全模块掉线恢复");
        EXCEPTION_INFO.put(0x413,"就地控制器网络断开");
        EXCEPTION_INFO.put(0x414,"就地控制器网络恢复");
        EXCEPTION_INFO.put(0x415,"主控RS485环路节点断开");
        EXCEPTION_INFO.put(0x416,"主控RS485环路节点恢复");
        EXCEPTION_INFO.put(0x417,"就地控制器掉线");
        EXCEPTION_INFO.put(0x418,"就地控制器掉线恢复");
        EXCEPTION_INFO.put(0x419,"就地下行RS485环路断开");
        EXCEPTION_INFO.put(0x41a,"就地下行RS485环路恢复");
        EXCEPTION_INFO.put(0x41b,"分控器在线");
        EXCEPTION_INFO.put(0x41c,"分控器离线");
        EXCEPTION_INFO.put(0x41d,"身份证阅读器未连接");
        EXCEPTION_INFO.put(0x41e,"身份证阅读器连接恢复");
        EXCEPTION_INFO.put(0x41f,"指纹模组未连接");
        EXCEPTION_INFO.put(0x420,"指纹模组连接恢复");
        EXCEPTION_INFO.put(0x421,"摄像头未连接");
        EXCEPTION_INFO.put(0x422,"摄像头连接恢复");
        EXCEPTION_INFO.put(0x423,"COM口未连接");
        EXCEPTION_INFO.put(0x424,"COM口连接恢复");
        EXCEPTION_INFO.put(0x425,"设备未授权");
        EXCEPTION_INFO.put(0x426,"人证设备在线");
        EXCEPTION_INFO.put(0x427,"人证设备离线");
        EXCEPTION_INFO.put(0x411,"电池电压低");
        EXCEPTION_INFO.put(0x412,"电池电压恢复正常）");
        EXCEPTION_INFO.put(0x428,"本地登录锁定");
        EXCEPTION_INFO.put(0x429,"本地登录解锁");
        EXCEPTION_INFO.put(0x42a,"与反潜回服务器通信断开");
        EXCEPTION_INFO.put(0x42b,"与反潜回服务器通信恢复");
        EXCEPTION_INFO.put(0x42c,"电机或传感器异常");
        EXCEPTION_INFO.put(0x42d,"CAN总线异常");
        EXCEPTION_INFO.put(0x42e,"CAN总线恢复");
        EXCEPTION_INFO.put(0x42f,"闸机腔体温度超限");
        EXCEPTION_INFO.put(0x430,"红外对射异常");
        EXCEPTION_INFO.put(0x431,"红外对射恢复");
        EXCEPTION_INFO.put(0x432,"灯板通信异常");
        EXCEPTION_INFO.put(0x433,"灯板通信恢复");
        EXCEPTION_INFO.put(0x434,"红外转接板通信异常");
        EXCEPTION_INFO.put(0x435,"红外转接板通信恢复");

        OPERATION_INFO = new HashMap<Integer, String>();
        OPERATION_INFO.put(0x50,"本地登陆");
        OPERATION_INFO.put(0x51,"本地注销登陆");
        OPERATION_INFO.put(0x5a,"本地升级");
        OPERATION_INFO.put(0x70,"远程登录");
        OPERATION_INFO.put(0x71,"远程注销登陆");
        OPERATION_INFO.put(0x79,"远程布防");
        OPERATION_INFO.put(0x7a,"远程撤防");
        OPERATION_INFO.put(0x7b,"远程重启");
        OPERATION_INFO.put(0x7e,"远程升级");
        OPERATION_INFO.put(0x86,"远程导出配置文件");
        OPERATION_INFO.put(0x87,"远程导入配置文件");
        OPERATION_INFO.put(0xd6,"远程手动开启报警输出");
        OPERATION_INFO.put(0xd7,"远程手动关闭报警输出");
        OPERATION_INFO.put(0x400,"远程开门");
        OPERATION_INFO.put(0x401,"远程关门");
        OPERATION_INFO.put(0x402,"远程常开");
        OPERATION_INFO.put(0x403,"远程常关");
        OPERATION_INFO.put(0x404,"远程手动校时");
        OPERATION_INFO.put(0x405,"NTP自动校时");
        OPERATION_INFO.put(0x406,"远程清空卡号");
        OPERATION_INFO.put(0x407,"远程恢复默认参数");
        OPERATION_INFO.put(0x408,"防区布防");
        OPERATION_INFO.put(0x409,"防区撤防");
        OPERATION_INFO.put(0x40a,"本地恢复默认参数");
        OPERATION_INFO.put(0x40b,"远程抓拍");
        OPERATION_INFO.put(0x40c,"修改网络中心参数配置");
        OPERATION_INFO.put(0x40d,"修改GPRS中心参数配置");
        OPERATION_INFO.put(0x40e,"修改中心组参数配置");
        OPERATION_INFO.put(0x40f,"解除码输入");
        OPERATION_INFO.put(0x410,"自动重新编号");
        OPERATION_INFO.put(0x411,"自动补充编号");
        OPERATION_INFO.put(0x412,"导入普通配置文件");
        OPERATION_INFO.put(0x413,"导出普通配置文件");
        OPERATION_INFO.put(0x414,"导入卡权限参数");
        OPERATION_INFO.put(0x415,"导出卡权限参数");
        OPERATION_INFO.put(0x416,"本地U盘升级");
        OPERATION_INFO.put(0x417,"访客呼梯");
        OPERATION_INFO.put(0x418,"住户呼梯");
        OPERATION_INFO.put(0x419,"远程实时布防");
        OPERATION_INFO.put(0x41a,"远程实时撤防");
        OPERATION_INFO.put(0x41b,"遥控器未对码操作失败");
        OPERATION_INFO.put(0x41c,"遥控器关门");
        OPERATION_INFO.put(0x41d,"遥控器开门");
        OPERATION_INFO.put(0x41e,"遥控器常开门");

        EVENT_INFO = new HashMap<Integer, String>();
        EVENT_INFO.put(0x01,"合法卡认证通过");
        EVENT_INFO.put(0x02,"刷卡加密码认证通过");
        EVENT_INFO.put(0x03,"刷卡加密码认证失败");
        EVENT_INFO.put(0x04,"刷卡加密码认证超时");
        EVENT_INFO.put(0x05,"刷卡加密码超次");
        EVENT_INFO.put(0x06,"未分配权限");
        EVENT_INFO.put(0x07,"无效时段");
        EVENT_INFO.put(0x08,"卡号过期");
        EVENT_INFO.put(0x09,"无此卡号");
        EVENT_INFO.put(0x0a,"反潜回认证失败");
        EVENT_INFO.put(0x0b,"互锁门未关闭");
        EVENT_INFO.put(0x0c,"卡不属于多重认证群组");
        EVENT_INFO.put(0x0d,"卡不在多重认证时间段内");
        EVENT_INFO.put(0x0e,"多重认证模式超级权限认证失败");
        EVENT_INFO.put(0x0f,"多重认证模式远程认证失败");
        EVENT_INFO.put(0x10,"多重认证成功");
        EVENT_INFO.put(0x11,"首卡开门开始");
        EVENT_INFO.put(0x12,"首卡开门结束");
        EVENT_INFO.put(0x13,"常开状态开始");
        EVENT_INFO.put(0x14,"常开状态结束");
        EVENT_INFO.put(0x15,"门锁打开");
        EVENT_INFO.put(0x16,"门锁关闭");
        EVENT_INFO.put(0x17,"开门按钮打开");
        EVENT_INFO.put(0x18,"开门按钮放开");
        EVENT_INFO.put(0x19,"正常开门（门磁）");
        EVENT_INFO.put(0x1a,"正常关门（门磁）");
        EVENT_INFO.put(0x1b,"门异常打开（门磁）");
        EVENT_INFO.put(0x1c,"门打开超时（门磁）");
        EVENT_INFO.put(0x1d,"报警输出打开");
        EVENT_INFO.put(0x1e,"报警输出关闭");
        EVENT_INFO.put(0x1f,"常关状态开始");
        EVENT_INFO.put(0x20,"常关状态结束");
        EVENT_INFO.put(0x21,"多重多重认证需要远程开门");
        EVENT_INFO.put(0x22,"多重认证超级密码认证成功");
        EVENT_INFO.put(0x23,"多重认证重复认证");
        EVENT_INFO.put(0x24,"多重认证超时");
        EVENT_INFO.put(0x25,"门铃响");
        EVENT_INFO.put(0x26,"指纹比对通过");
        EVENT_INFO.put(0x27,"指纹比对失败");
        EVENT_INFO.put(0x28,"刷卡加指纹认证通过");
        EVENT_INFO.put(0x29,"刷卡加指纹认证失败");
        EVENT_INFO.put(0x2a,"刷卡加指纹认证超时");
        EVENT_INFO.put(0x2b,"刷卡加指纹加密码认证通过");
        EVENT_INFO.put(0x2c,"刷卡加指纹加密码认证失败");
        EVENT_INFO.put(0x2d,"刷卡加指纹加密码认证超时");
        EVENT_INFO.put(0x2e,"指纹加密码认证通过");
        EVENT_INFO.put(0x2f,"指纹加密码认证失败");
        EVENT_INFO.put(0x30,"指纹加密码认证超时");
        EVENT_INFO.put(0x31,"指纹不存在");
        EVENT_INFO.put(0x32,"刷卡平台认证");
        EVENT_INFO.put(0x33,"呼叫中心事件");
        EVENT_INFO.put(0x34,"消防继电器导通触发门常开");
        EVENT_INFO.put(0x35,"消防继电器恢复门恢复正常");
        EVENT_INFO.put(0x36,"人脸加指纹认证通过");
        EVENT_INFO.put(0x37,"人脸加指纹认证失败");
        EVENT_INFO.put(0x38,"人脸加指纹认证超时");
        EVENT_INFO.put(0x39,"人脸加密码认证通过");
        EVENT_INFO.put(0x3a,"人脸加密码认证失败");
        EVENT_INFO.put(0x3b,"人脸加密码认证超时");
        EVENT_INFO.put(0x3c,"人脸加刷卡认证通过");
        EVENT_INFO.put(0x3d,"人脸加刷卡认证失败");
        EVENT_INFO.put(0x3e,"人脸加刷卡认证超时");
        EVENT_INFO.put(0x3f,"人脸加密码加指纹认证通过");
        EVENT_INFO.put(0x40,"人脸加密码加指纹认证失败");
        EVENT_INFO.put(0x41,"人脸加密码加指纹认证超时");
        EVENT_INFO.put(0x42,"人脸加刷卡加指纹认证通过");
        EVENT_INFO.put(0x43,"人脸加刷卡加指纹认证失败");
        EVENT_INFO.put(0x44,"人脸加刷卡加指纹认证超时");
        EVENT_INFO.put(0x45,"工号加指纹认证通过");
        EVENT_INFO.put(0x46,"工号加指纹认证失败");
        EVENT_INFO.put(0x47,"工号加指纹认证超时");
        EVENT_INFO.put(0x48,"工号加指纹加密码认证通过");
        EVENT_INFO.put(0x49,"工号加指纹加密码认证失败");
        EVENT_INFO.put(0x4a,"工号加指纹加密码认证超时");
        EVENT_INFO.put(0x4b,"人脸认证通过");
        EVENT_INFO.put(0x4c,"人脸认证失败");
        EVENT_INFO.put(0x4d,"工号加人脸认证通过");
        EVENT_INFO.put(0x4e,"工号加人脸认证失败");
        EVENT_INFO.put(0x4f,"工号加人脸认证超时");
        EVENT_INFO.put(0x50,"人脸识别失败");
        EVENT_INFO.put(0x51,"首卡授权开始");
        EVENT_INFO.put(0x52,"首卡授权结束");
        EVENT_INFO.put(0x53,"门锁输入短路报警");
        EVENT_INFO.put(0x54,"门锁输入断路报警");
        EVENT_INFO.put(0x55,"门锁输入异常报警");
        EVENT_INFO.put(0x56,"门磁输入短路报警");
        EVENT_INFO.put(0x57,"门磁输入断路报警");
        EVENT_INFO.put(0x58,"门磁输入异常报警");
        EVENT_INFO.put(0x59,"开门按钮输入短路报警");
        EVENT_INFO.put(0x5a,"开门按钮输入断路报警");
        EVENT_INFO.put(0x5b,"开门按钮输入异常报警");
        EVENT_INFO.put(0x5c,"门锁异常打开");
        EVENT_INFO.put(0x5d,"门锁打开超时");
        EVENT_INFO.put(0x5e,"首卡未授权开门失败");
        EVENT_INFO.put(0x5f,"呼梯继电器断开");
        EVENT_INFO.put(0x60,"呼梯继电器闭合");
        EVENT_INFO.put(0x61,"自动按键继电器断开");
        EVENT_INFO.put(0x62,"自动按键继电器闭合");
        EVENT_INFO.put(0x63,"按键梯控继电器断开");
        EVENT_INFO.put(0x64,"按键梯控继电器闭合");
        EVENT_INFO.put(0x65,"工号加密码认证通过");
        EVENT_INFO.put(0x66,"工号加密码认证失败");
        EVENT_INFO.put(0x67,"工号加密码认证超时");
        EVENT_INFO.put(0x68,"真人检测失败");
        EVENT_INFO.put(0x69,"人证比对通过");
        EVENT_INFO.put(0x70,"人证比对失败");
        EVENT_INFO.put(0x71,"黑名单事件");
        EVENT_INFO.put(0x72,"合法短信");
        EVENT_INFO.put(0x73,"非法短信");
        EVENT_INFO.put(0x74,"MAC侦测");
        EVENT_INFO.put(0x75,"门状态常闭或休眠状态认证失败");
        EVENT_INFO.put(0x76,"认证计划休眠模式认证失败");
        EVENT_INFO.put(0x76,"认证计划休眠模式认证失败");
        EVENT_INFO.put(0x77,"卡加密校验失败");
        EVENT_INFO.put(0x78,"反潜回服务器应答失败");
        EVENT_INFO.put(0x85,"尾随通行");
        EVENT_INFO.put(0x86,"反向闯入");
        EVENT_INFO.put(0x87,"外力冲撞");
        EVENT_INFO.put(0x88,"翻越");
        EVENT_INFO.put(0x89,"通行超时");
        EVENT_INFO.put(0x8a,"误闯报警");
        EVENT_INFO.put(0x8b,"闸机自由通行时未认证通过");
        EVENT_INFO.put(0x8c,"摆臂被阻挡");
        EVENT_INFO.put(0x8d,"摆臂阻挡消除");
        EVENT_INFO.put(0x8e,"设备升级本地人脸建模失败");
        EVENT_INFO.put(0x8f,"逗留事件");
        EVENT_INFO.put(0x97,"密码不匹配");
        EVENT_INFO.put(0x98,"工号不存在");
        EVENT_INFO.put(0x99,"组合认证通过");
        EVENT_INFO.put(0x9a,"组合认证超时");
        EVENT_INFO.put(0x9b,"认证方式不匹配");

        HIK_ALARM_INFO = new HashMap<Integer, Map<Integer, String>>();
        HIK_ALARM_INFO.put(0x1, ALARM_INFO);
        HIK_ALARM_INFO.put(0x2, EXCEPTION_INFO);
        HIK_ALARM_INFO.put(0x3, OPERATION_INFO);
        HIK_ALARM_INFO.put(0x5, EVENT_INFO);
    }

    public static String GetAlarmDetail(Integer major, Integer minor){
        return HIK_ALARM_INFO.get(major).get(minor);
    }
}
